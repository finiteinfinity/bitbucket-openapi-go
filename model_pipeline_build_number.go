/*
Bitbucket API

Code against the Bitbucket API to automate simple tasks, embed Bitbucket data into your own site, build mobile or desktop apps, or even add custom UI add-ons into Bitbucket itself using the Connect framework.

API version: 2.0
Contact: support@bitbucket.org
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package bitbucket

import (
	"encoding/json"
)

// PipelineBuildNumber A Pipelines build number.
type PipelineBuildNumber struct {
	// The next number that will be used as build number.
	Next *int32 `json:"next,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _PipelineBuildNumber PipelineBuildNumber

// NewPipelineBuildNumber instantiates a new PipelineBuildNumber object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPipelineBuildNumber() *PipelineBuildNumber {
	this := PipelineBuildNumber{}
	return &this
}

// NewPipelineBuildNumberWithDefaults instantiates a new PipelineBuildNumber object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPipelineBuildNumberWithDefaults() *PipelineBuildNumber {
	this := PipelineBuildNumber{}
	return &this
}

// GetNext returns the Next field value if set, zero value otherwise.
func (o *PipelineBuildNumber) GetNext() int32 {
	if o == nil || o.Next == nil {
		var ret int32
		return ret
	}
	return *o.Next
}

// GetNextOk returns a tuple with the Next field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PipelineBuildNumber) GetNextOk() (*int32, bool) {
	if o == nil || o.Next == nil {
		return nil, false
	}
	return o.Next, true
}

// HasNext returns a boolean if a field has been set.
func (o *PipelineBuildNumber) HasNext() bool {
	if o != nil && o.Next != nil {
		return true
	}

	return false
}

// SetNext gets a reference to the given int32 and assigns it to the Next field.
func (o *PipelineBuildNumber) SetNext(v int32) {
	o.Next = &v
}

func (o PipelineBuildNumber) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Next != nil {
		toSerialize["next"] = o.Next
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *PipelineBuildNumber) UnmarshalJSON(bytes []byte) (err error) {
	varPipelineBuildNumber := _PipelineBuildNumber{}

	if err = json.Unmarshal(bytes, &varPipelineBuildNumber); err == nil {
		*o = PipelineBuildNumber(varPipelineBuildNumber)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "next")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullablePipelineBuildNumber struct {
	value *PipelineBuildNumber
	isSet bool
}

func (v NullablePipelineBuildNumber) Get() *PipelineBuildNumber {
	return v.value
}

func (v *NullablePipelineBuildNumber) Set(val *PipelineBuildNumber) {
	v.value = val
	v.isSet = true
}

func (v NullablePipelineBuildNumber) IsSet() bool {
	return v.isSet
}

func (v *NullablePipelineBuildNumber) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePipelineBuildNumber(val *PipelineBuildNumber) *NullablePipelineBuildNumber {
	return &NullablePipelineBuildNumber{value: val, isSet: true}
}

func (v NullablePipelineBuildNumber) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePipelineBuildNumber) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


