/*
Bitbucket API

Code against the Bitbucket API to automate simple tasks, embed Bitbucket data into your own site, build mobile or desktop apps, or even add custom UI add-ons into Bitbucket itself using the Connect framework.

API version: 2.0
Contact: support@bitbucket.org
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package bitbucket

import (
	"encoding/json"
)

// DeploymentsDdevDeploymentEnvironmentLock struct for DeploymentsDdevDeploymentEnvironmentLock
type DeploymentsDdevDeploymentEnvironmentLock struct {
	Object
	// The UUID identifying the environment.
	EnvironmentUuid *string `json:"environmentUuid,omitempty"`
}

// NewDeploymentsDdevDeploymentEnvironmentLock instantiates a new DeploymentsDdevDeploymentEnvironmentLock object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeploymentsDdevDeploymentEnvironmentLock() *DeploymentsDdevDeploymentEnvironmentLock {
	this := DeploymentsDdevDeploymentEnvironmentLock{}
	return &this
}

// NewDeploymentsDdevDeploymentEnvironmentLockWithDefaults instantiates a new DeploymentsDdevDeploymentEnvironmentLock object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeploymentsDdevDeploymentEnvironmentLockWithDefaults() *DeploymentsDdevDeploymentEnvironmentLock {
	this := DeploymentsDdevDeploymentEnvironmentLock{}
	return &this
}

// GetEnvironmentUuid returns the EnvironmentUuid field value if set, zero value otherwise.
func (o *DeploymentsDdevDeploymentEnvironmentLock) GetEnvironmentUuid() string {
	if o == nil || o.EnvironmentUuid == nil {
		var ret string
		return ret
	}
	return *o.EnvironmentUuid
}

// GetEnvironmentUuidOk returns a tuple with the EnvironmentUuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeploymentsDdevDeploymentEnvironmentLock) GetEnvironmentUuidOk() (*string, bool) {
	if o == nil || o.EnvironmentUuid == nil {
		return nil, false
	}
	return o.EnvironmentUuid, true
}

// HasEnvironmentUuid returns a boolean if a field has been set.
func (o *DeploymentsDdevDeploymentEnvironmentLock) HasEnvironmentUuid() bool {
	if o != nil && o.EnvironmentUuid != nil {
		return true
	}

	return false
}

// SetEnvironmentUuid gets a reference to the given string and assigns it to the EnvironmentUuid field.
func (o *DeploymentsDdevDeploymentEnvironmentLock) SetEnvironmentUuid(v string) {
	o.EnvironmentUuid = &v
}

func (o DeploymentsDdevDeploymentEnvironmentLock) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	serializedObject, errObject := json.Marshal(o.Object)
	if errObject != nil {
		return []byte{}, errObject
	}
	errObject = json.Unmarshal([]byte(serializedObject), &toSerialize)
	if errObject != nil {
		return []byte{}, errObject
	}
	if o.EnvironmentUuid != nil {
		toSerialize["environmentUuid"] = o.EnvironmentUuid
	}
	return json.Marshal(toSerialize)
}

type NullableDeploymentsDdevDeploymentEnvironmentLock struct {
	value *DeploymentsDdevDeploymentEnvironmentLock
	isSet bool
}

func (v NullableDeploymentsDdevDeploymentEnvironmentLock) Get() *DeploymentsDdevDeploymentEnvironmentLock {
	return v.value
}

func (v *NullableDeploymentsDdevDeploymentEnvironmentLock) Set(val *DeploymentsDdevDeploymentEnvironmentLock) {
	v.value = val
	v.isSet = true
}

func (v NullableDeploymentsDdevDeploymentEnvironmentLock) IsSet() bool {
	return v.isSet
}

func (v *NullableDeploymentsDdevDeploymentEnvironmentLock) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeploymentsDdevDeploymentEnvironmentLock(val *DeploymentsDdevDeploymentEnvironmentLock) *NullableDeploymentsDdevDeploymentEnvironmentLock {
	return &NullableDeploymentsDdevDeploymentEnvironmentLock{value: val, isSet: true}
}

func (v NullableDeploymentsDdevDeploymentEnvironmentLock) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeploymentsDdevDeploymentEnvironmentLock) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


