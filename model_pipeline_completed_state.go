/*
Bitbucket API

Code against the Bitbucket API to automate simple tasks, embed Bitbucket data into your own site, build mobile or desktop apps, or even add custom UI add-ons into Bitbucket itself using the Connect framework.

API version: 2.0
Contact: support@bitbucket.org
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package bitbucket

import (
	"encoding/json"
)

// PipelineCompletedState A Bitbucket Pipelines COMPLETED pipeline state.
type PipelineCompletedState struct {
	// The name of pipeline state (COMPLETED).
	Name *string `json:"name,omitempty"`
	Result *PipelineStateCompletedResult `json:"result,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _PipelineCompletedState PipelineCompletedState

// NewPipelineCompletedState instantiates a new PipelineCompletedState object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPipelineCompletedState() *PipelineCompletedState {
	this := PipelineCompletedState{}
	return &this
}

// NewPipelineCompletedStateWithDefaults instantiates a new PipelineCompletedState object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPipelineCompletedStateWithDefaults() *PipelineCompletedState {
	this := PipelineCompletedState{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *PipelineCompletedState) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PipelineCompletedState) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *PipelineCompletedState) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *PipelineCompletedState) SetName(v string) {
	o.Name = &v
}

// GetResult returns the Result field value if set, zero value otherwise.
func (o *PipelineCompletedState) GetResult() PipelineStateCompletedResult {
	if o == nil || o.Result == nil {
		var ret PipelineStateCompletedResult
		return ret
	}
	return *o.Result
}

// GetResultOk returns a tuple with the Result field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PipelineCompletedState) GetResultOk() (*PipelineStateCompletedResult, bool) {
	if o == nil || o.Result == nil {
		return nil, false
	}
	return o.Result, true
}

// HasResult returns a boolean if a field has been set.
func (o *PipelineCompletedState) HasResult() bool {
	if o != nil && o.Result != nil {
		return true
	}

	return false
}

// SetResult gets a reference to the given PipelineStateCompletedResult and assigns it to the Result field.
func (o *PipelineCompletedState) SetResult(v PipelineStateCompletedResult) {
	o.Result = &v
}

func (o PipelineCompletedState) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Result != nil {
		toSerialize["result"] = o.Result
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *PipelineCompletedState) UnmarshalJSON(bytes []byte) (err error) {
	varPipelineCompletedState := _PipelineCompletedState{}

	if err = json.Unmarshal(bytes, &varPipelineCompletedState); err == nil {
		*o = PipelineCompletedState(varPipelineCompletedState)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "name")
		delete(additionalProperties, "result")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullablePipelineCompletedState struct {
	value *PipelineCompletedState
	isSet bool
}

func (v NullablePipelineCompletedState) Get() *PipelineCompletedState {
	return v.value
}

func (v *NullablePipelineCompletedState) Set(val *PipelineCompletedState) {
	v.value = val
	v.isSet = true
}

func (v NullablePipelineCompletedState) IsSet() bool {
	return v.isSet
}

func (v *NullablePipelineCompletedState) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePipelineCompletedState(val *PipelineCompletedState) *NullablePipelineCompletedState {
	return &NullablePipelineCompletedState{value: val, isSet: true}
}

func (v NullablePipelineCompletedState) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePipelineCompletedState) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


